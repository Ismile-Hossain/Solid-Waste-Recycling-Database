2.
/*GLASS RECYCLING REECORD DIYE OUTPUT*/

CREATE OR REPLACE PROCEDURE RECYCLING
AS
TYPE RECYCLING_TYPE
IS
RECORD (
  COLLECTED_WASTE NUMBER(10),
  SIZED GLASS_SIZE_CLASSIFIER.GLASS_SIZE%TYPE,  
  AMOUNT GLASS_SIZE_CLASSIFIER.SIZE_AMOUNT%TYPE

);
RECYCLING_REC RECYCLING_TYPE;
 BEGIN
 SELECT process_collected_waste,GLASS_SIZE,SIZE_AMOUNT
 INTO RECYCLING_REC FROM 
 RECYCLING_PROCESS RP JOIN 
 GLASS_RECYCLING GR ON 
 RP.PROCESS_DATE=GR.PROCESS_DATE AND RP.PROCESS_ID=GR.PROCESS_ID
 JOIN GLASS_SIZE_CLASSIFIER GSZ ON
 GR.PROCESS_DATE=GSZ.PROCESS_DATE AND GR.PROCESS_ID=GSZ.PROCESS_ID
 WHERE 
 GSZ.SERIAL_NO=1

;

 DBMS_OUTPUT.PUT_LINE('TYPE OF WASTE:GLASS TOTAL AMOUNT:'|| RECYCLING_REC.COLLECTED_WASTE);
 DBMS_OUTPUT.PUT_LINE('SIZE OF GLASS:'|| RECYCLING_REC.SIZED);
 DBMS_OUTPUT.PUT_LINE('AMOUNT:'|| RECYCLING_REC.AMOUNT);
 
END;




3.
/*SPECIFIC ERROR KE SOLVE KORTESI*/
CREATE OR REPLACE PROCEDURE ERROR_SPECIFIC
AS

CURSOR ERROR_CURSOR
IS
SELECT ERROR_TYPE, ERROR_SOLVING_COST,RP.PROCESS_RATE,EMPLOYEE_NAME 
FROM EMPLOYEE EM JOIN ERROR E
USING(EMPLOYEE_ID)
JOIN RECYCLING_PROCESS RP
ON 
E.PROCESS_ID=RP.PROCESS_ID AND E.PROCESS_DATE=RP.PROCESS_DATE
WHERE 
ERROR_SOLVING_COST IN 
(
   SELECT MIN(ERROR_SOLVING_COST)  
   FROM ERROR 
  
)
AND 
EMPLOYEE_ID='EMP_00000001'
;
ERROR_val ERROR_cursor%ROWTYPE;
BEGIN
OPEN ERROR_cursor;
LOOP
FETCH ERROR_cursor INTO ERROR_val;
EXIT WHEN ERROR_cursor%NOTFOUND;
DBMS_OUTPUT.PUT_LINE(ERROR_val.ERROR_TYPE);
END LOOP;
CLOSE ERROR_cursor;
END;





